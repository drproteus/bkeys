# Generated by Django 4.1.4 on 2022-12-27 23:55

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cable",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("drop_shipped", models.BooleanField(default=False)),
                ("stock", models.IntegerField(default=0)),
                ("url", models.CharField(blank=True, max_length=1024)),
                ("notes", models.TextField(blank=True)),
                ("about", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "input",
                    models.CharField(
                        choices=[
                            ("micro", "Micro USB"),
                            ("mini", "Mini USB"),
                            ("type-c", "USB-C"),
                        ],
                        default="micro",
                        max_length=128,
                    ),
                ),
                (
                    "output",
                    models.CharField(
                        choices=[("type-a", "USB-A"), ("type-c", "USB-C")],
                        default="type-a",
                        max_length=128,
                    ),
                ),
                (
                    "length_cm",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Component",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("drop_shipped", models.BooleanField(default=False)),
                ("stock", models.IntegerField(default=0)),
                ("url", models.CharField(blank=True, max_length=1024)),
                ("notes", models.TextField(blank=True)),
                ("about", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Keyboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("drop_shipped", models.BooleanField(default=False)),
                ("stock", models.IntegerField(default=0)),
                ("url", models.CharField(blank=True, max_length=1024)),
                ("notes", models.TextField(blank=True)),
                ("about", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "form_factor",
                    models.CharField(
                        choices=[
                            ("60", "60%"),
                            ("65", "65%"),
                            ("75", "75%"),
                            ("80", "80%"),
                            ("95", "95%"),
                            ("100", "100%"),
                            ("numpad", "numpad"),
                            ("macro", "macro"),
                            ("custom", "custom"),
                        ],
                        default="custom",
                        max_length=128,
                    ),
                ),
                ("key_count", models.PositiveIntegerField(default=0)),
                ("hot_swappable", models.BooleanField(default=False)),
                (
                    "switches",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mechanical_linear", "Linear"),
                            ("mechanical_tactile", "Tactile"),
                            ("mechanical_clicky", "Clicky"),
                            ("optical", "Optical"),
                            ("hybrid", "Hybrid"),
                            ("topre", "Topre"),
                            ("other", "Other"),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "keycaps",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("abs", "ABS"),
                            ("pbt", "PBT"),
                            ("wood", "Wood"),
                            ("other", "Other"),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "wireless_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("bluetooth", "Bluetooth"),
                            ("2.4ghz", "2.4GHz"),
                            ("combo", "Bluetooth and 2.4GHz"),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "input",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("micro", "Micro USB"),
                            ("mini", "Mini USB"),
                            ("type-c", "USB-C"),
                        ],
                        default="type-c",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "output",
                    models.CharField(
                        blank=True,
                        choices=[("type-a", "USB-A"), ("type-c", "USB-C")],
                        max_length=128,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="KeycapSet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("drop_shipped", models.BooleanField(default=False)),
                ("stock", models.IntegerField(default=0)),
                ("url", models.CharField(blank=True, max_length=1024)),
                ("notes", models.TextField(blank=True)),
                ("about", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "material",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("abs", "ABS"),
                            ("pbt", "PBT"),
                            ("wood", "Wood"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=128,
                    ),
                ),
                ("count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SwitchSet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                ("drop_shipped", models.BooleanField(default=False)),
                ("stock", models.IntegerField(default=0)),
                ("url", models.CharField(blank=True, max_length=1024)),
                ("notes", models.TextField(blank=True)),
                ("about", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "switch_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mechanical_linear", "Linear"),
                            ("mechanical_tactile", "Tactile"),
                            ("mechanical_clicky", "Clicky"),
                            ("optical", "Optical"),
                            ("hybrid", "Hybrid"),
                            ("topre", "Topre"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=128,
                    ),
                ),
                ("count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ComponentImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="images/components/")),
                ("default", models.BooleanField(default=False)),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="inventory.component",
                    ),
                ),
            ],
        ),
    ]
